// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoViajes.API.Database;

#nullable disable

namespace ProyectoViajes.API.Migrations
{
    [DbContext(typeof(ProyectoViajesContext))]
    [Migration("20240725053242_FixSomeNames")]
    partial class FixSomeNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoViajes.API.Database.Entities.ActivityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<Guid>("TravelPackageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("travel_package_id");

                    b.HasKey("Id");

                    b.HasIndex("TravelPackageId");

                    b.ToTable("activity", "dbo");
                });

            modelBuilder.Entity("ProyectoViajes.API.Database.Entities.AgencyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("contact");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("registration_date");

                    b.HasKey("Id");

                    b.ToTable("agency", "dbo");
                });

            modelBuilder.Entity("ProyectoViajes.API.Database.Entities.DestinationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("destination", "dbo");
                });

            modelBuilder.Entity("ProyectoViajes.API.Database.Entities.PointInterestEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("destination_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("DestinationId");

                    b.ToTable("point_interest", "dbo");
                });

            modelBuilder.Entity("ProyectoViajes.API.Database.Entities.TravelPackageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("AgencyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("agency_id");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("destination_id");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.HasIndex("DestinationId");

                    b.ToTable("travel_package", "dbo");
                });

            modelBuilder.Entity("ProyectoViajes.API.Database.Entities.ActivityEntity", b =>
                {
                    b.HasOne("ProyectoViajes.API.Database.Entities.TravelPackageEntity", "TravelPackage")
                        .WithMany("Activities")
                        .HasForeignKey("TravelPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TravelPackage");
                });

            modelBuilder.Entity("ProyectoViajes.API.Database.Entities.PointInterestEntity", b =>
                {
                    b.HasOne("ProyectoViajes.API.Database.Entities.DestinationEntity", "Destination")
                        .WithMany("PointsInterest")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("ProyectoViajes.API.Database.Entities.TravelPackageEntity", b =>
                {
                    b.HasOne("ProyectoViajes.API.Database.Entities.AgencyEntity", "Agency")
                        .WithMany("TravelPackages")
                        .HasForeignKey("AgencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoViajes.API.Database.Entities.DestinationEntity", "Destination")
                        .WithMany("TravelPackages")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agency");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("ProyectoViajes.API.Database.Entities.AgencyEntity", b =>
                {
                    b.Navigation("TravelPackages");
                });

            modelBuilder.Entity("ProyectoViajes.API.Database.Entities.DestinationEntity", b =>
                {
                    b.Navigation("PointsInterest");

                    b.Navigation("TravelPackages");
                });

            modelBuilder.Entity("ProyectoViajes.API.Database.Entities.TravelPackageEntity", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
